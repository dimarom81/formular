

<!DOCTYPE html>
<html lang="en">
<head>
	<title>ForgeBox</title>
	<meta name="keywords" content="contentbox.model.updates.concurrent.Callable interface">
	<!-- common assets -->
	

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel ="stylesheet" type="text/css" href="../../../bootstrap/css/bootstrap.min.css">
<link rel ="stylesheet" type="text/css" href="../../../stylesheet.css">
	
<link href='https://fonts.googleapis.com/css?family=Ubuntu:400,300,300italic,400italic,700,700italic|Ubuntu+Mono' rel='stylesheet' type='text/css' />
	
<script src="../../../bootstrap/js/jquery-2.1.0.min.js" type="text/javascript"></script>
<script src="../../../bootstrap/js/bootstrap.min.js" type="text/javascript"></script>

<script>
$(document).ready(function() {
	// Global Tool Tip Settings
	$( '[title]' ).tooltip({
		 animation: 'slide',
		 delay: { show: 250, hide: 250 }
	});
});
</script>
	<!-- syntax highlighter -->
	<link type="text/css" rel="stylesheet" href="../../../highlighter/styles/shCoreDefault.css">
	<script src="../../../highlighter/scripts/shCore.js"></script>
	<script src="../../../highlighter/scripts/shBrushColdFusion.js"></script>
	<script src="../../../highlighter/scripts/shBrushXml.js"></script>
	<script src="../../../highlighter/scripts/shBrushSql.js"></script>
	<script src="../../../highlighter/scripts/shBrushJScript.js"></script>
	<script src="../../../highlighter/scripts/shBrushJava.js"></script>
	<script src="../../../highlighter/scripts/shBrushCss.js"></script>
	<script type="text/javascript">SyntaxHighlighter.all();</script>
</head>

<body class="withNavbar">






<!-- ========= START OF NAVBAR ======= -->
<a name="navbar_top"></a>
<a href="#skip-navbar_top" title="skip navigation links"></a>	

<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
	<div class="container-fluid">
    
		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#class-navigation">
				<span class="sr-only">Toggle navigation</span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>
			<a class="navbar-brand" href="#"><strong>ContentBox Modular CMS v2.1.0</strong></a>
		</div>

	    <div class="collapse navbar-collapse" id="class-navigation">
	    	<ul class="nav navbar-nav">
				
					
					<li><a href="../../../overview-summary.html"><i class="glyphicon glyphicon-plane"></i> overview</a></li>
					
				

				
					<li><a href="package-summary.html"><i class="glyphicon glyphicon-folder-open"></i> &nbsp;package</a></li>
				

			  	
					<li class="dropdown active">
						<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="glyphicon glyphicon-file"></i> class <b class="caret"></b></a>

						<ul class="dropdown-menu">
							<li><a href="#class">Class Definition</a></li>
							<li><a href="#constructor_summary">Constructor Summary</a></li>
							<li><a href="#constructor_detail">Constructor Detail</a></li>
							<li><a href="#inherited_methods">Inherited Methods</a></li>
							<li><a href="#method_summary">Method Summary</a></li>
							<li><a href="#method_detail">Method Detail</a></li>
							<li><a href="#property_summary">Property Summary</a></li>
							<li><a href="#property_detail">Property Detail</a></li>
							
						</ul>
					</li>
				
	      	</ul>

			<ul class="nav navbar-nav navbar-right">
				<li><a href="../../../index.html?contentbox/model/updates/ForgeBox.html" target="_top">
					<i class="glyphicon glyphicon-fullscreen"></i> Frames
					</a>
				</li>
			</ul>
	    </div>

	</div>
</nav>	

<a name="skip-navbar_top"></a>
<!-- ========= END OF NAVBAR ========= -->

<!-- ======== start of class data ======== -->
<a name="class"><!-- --></a>

<!-- Package -->
<div class="pull-right">
	<a href="package-summary.html" title="Package: contentbox.model.updates"><span class="label label-success">contentbox.model.updates</span></a>
</div>

<h2>

Class

 ForgeBox</h2>








	
		
	
	

	
		
		
			
		
	
	


<!-- Inheritance Tree-->
<pre>railo-context.Component
        <img src="../../../resources/inherit.gif" alt="extended by ">contentbox.model.updates.ForgeBox
</pre>

<div class="panel panel-default">
	<div class="panel-heading"><strong>Class Attributes:</strong></div>
		<div class="panel-body">
		
		
			
		
			
		
			
			
			<li class="label label-danger label-annotations">
				output 
				
				: false		
				
			</li>
			&nbsp;
			
		
			
		
			
			
			<li class="label label-danger label-annotations">
				synchronized 
				
				: false		
				
			</li>
			&nbsp;
			
		
			
		
			
		
			
		
			
		
			
			
			<li class="label label-danger label-annotations">
				accessors 
				
				: true		
				
			</li>
			&nbsp;
			
		
			
		
			
			
			<li class="label label-danger label-annotations">
				persistent 
				
				: false		
				
			</li>
			&nbsp;
			
		
			
		
			
		
		
	</div>
</div>


	
	







<div id="class-hint">
	<p>ForgeBox API REST Wrapper</p>
</div>





<!-- ========== METHOD SUMMARY =========== -->

<a name="property_summary"><!-- --></a>
<table class="table table-bordered table-hover">
	<tr class="info">
		<th align="left" colspan="5">
			<strong>Property Summary</strong>
		</th>
	</tr>
	<tr class="info">
		<th align="left">
			<strong>type</strong>
		</th>
		<th align="left">
			<strong>property</strong>
		</th>
		<th align="left">
			<strong>default</strong>
		</th>
		<th align="left">
			<strong>serializable</strong>
		</th>
		<th align="left">
			<strong>required</strong>
		</th>
	</tr>

	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>any</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#APIURL()">APIURL</A></strong> 
			<br>
			
			<br><br>
			<ul>
			
				
			
				
			
				
			
				
				<li class="label label-default label-annotations">inject = coldbox:setting:updatesURL@contentbox</li>
				
			
				
			
				
			
				
			
			</ul>

		</td>
		<td align="right" valign="top" width="1%">
			
		</td>
		<td align="right" valign="top" width="1%">
			<code>
				true
			</code>
		</td>
		<td align="right" valign="top" width="1%">
			<code>
				false
			</code>
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>any</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#logger()">logger</A></strong> 
			<br>
			
			<br><br>
			<ul>
			
				
			
				
			
				
			
				
				<li class="label label-default label-annotations">inject = logbox:logger:{this}</li>
				
			
				
			
				
			
				
			
			</ul>

		</td>
		<td align="right" valign="top" width="1%">
			
		</td>
		<td align="right" valign="top" width="1%">
			<code>
				true
			</code>
		</td>
		<td align="right" valign="top" width="1%">
			<code>
				false
			</code>
		</td>
	</tr>
	
	</tr>
</table>



	
	
	<!-- ======== CONSTRUCTOR SUMMARY ======== -->

	<a name="constructor_summary"><!-- --></a>
	<table class="table table-bordered table-hover">
		<tr class="info">
			<th align="left" colspan="2">
				<strong>Constructor Summary</strong>
			</th>
		</tr>
		<tr>
			
			<td>
				<strong><a href="ForgeBox.html#init()">init</A></strong>()
				<br>
				
				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Constructor.
				
			</td>
		</tr>
	</table>





<!-- ========== METHOD SUMMARY =========== -->

<a name="method_summary"><!-- --></a>
<table class="table table-bordered table-hover">
	<tr class="info">
		<th align="left" colspan="2">
			<strong>Method Summary</strong>
		</th>
	</tr>

	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>void</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#$abort()">$abort</A></strong>()
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Facade for cfabort.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>void</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#$dump()">$dump</A></strong>(any var, [boolean isAbort='false'])
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Facade for cfmx dump.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>any</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#$throw()">$throw</A></strong>(string message, [string detail=''], [string type='Framework'])
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Facade for cfthrow.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>string</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#getAPIURL()">getAPIURL</A></strong>()
			<br>
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>query</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#getEntries()">getEntries</A></strong>([string orderBy='[runtime expression]'], [numeric maxrows='0'], [numeric startRow='1'], [string typeSlug=''])
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get entries.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>struct</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#getEntry()">getEntry</A></strong>(string slug='')
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get an entry from forgebox by slug.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>string</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#getLogger()">getLogger</A></strong>()
			<br>
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>query</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#getTypes()">getTypes</A></strong>()
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get an array of entry types.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>struct</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#install()">install</A></strong>(string downloadURL, string destinationDir)
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Install Code Entry.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>private&nbsp;struct</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#makeRequest()">makeRequest</A></strong>([string method='GET'], [string resource=''], [any body=''], [struct headers='[runtime expression]'], [struct parameters='[runtime expression]'], [numeric timeout='30'])
			<br>
			
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invoke a ForgeBox REST Call.
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>any</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#setAPIURL()">setAPIURL</A></strong>(any APIURL)
			<br>
			
		</td>
	</tr>
	
	
	
	<tr>
		<td align="right" valign="top" width="1%">
			<code>any</code>
		</td>
		<td>
			<strong><a href="ForgeBox.html#setLogger()">setLogger</A></strong>(any logger)
			<br>
			
		</td>
	</tr>
	
</table>



<a name="inherited_methods"><!-- --></a>


	

	

	&nbsp;
	<a name="methods_inherited_from_class_railo-context.Component"><!-- --></a>
	<table class="table table-hover table-bordered">
		<tr class="info">
			<th align="left">
				<strong>Methods inherited from class <kbd>railo-context.Component</kbd></strong>
			</th>
		</tr>
		<tr>
			<td>
				
				
				
				
				
					<span class="label label-warning"><em>None</em></span>
				
			</td>
		</tr>
	</table>


<hr>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

	<a name="constructor_detail"><!-- --></a>
	<table class="table table-bordered">
		<tr class="info">
			<th colspan="1" align="left">
				<strong>Constructor Detail</strong>
			</th>
		</tr>
	</table>

	<a name="init()"><!-- --></a><h3>
	init</h3>
	<kbd>public <strong>init</strong>()</kbd>

	<br><br>

	
	<p>Constructor</p>
	

	
	<hr>


<!-- ============ PROPERTY DETAIL ========== -->

	<a name="property_detail"><!-- --></a>
	<table class="table table-bordered">
		<tr class="info">
			<th colspan="1" align="left">
				<strong>Property Detail</strong>
			</th>
		</tr>
	</table>

	
		
		<a name="APIURL()"><!-- --></a>
		<h3>APIURL</h3>

		<kbd>
			property any 
			<strong>APIURL</strong>
			
		</kbd>

		<br><br>
		

		<dl>
		<dt><strong>Attributes:</strong></dt>
		
			
		
			
			<dd><code>required</code> - false</dd>
			
		
			
		
			
			<dd><code>inject</code> - coldbox:setting:updatesURL@contentbox</dd>
			
		
			
		
			
		
			
			<dd><code>serializable</code> - true</dd>
			
		
		</dl>

		<hr>
	
		
		<a name="logger()"><!-- --></a>
		<h3>logger</h3>

		<kbd>
			property any 
			<strong>logger</strong>
			
		</kbd>

		<br><br>
		

		<dl>
		<dt><strong>Attributes:</strong></dt>
		
			
		
			
			<dd><code>required</code> - false</dd>
			
		
			
		
			
			<dd><code>inject</code> - logbox:logger:{this}</dd>
			
		
			
		
			
		
			
			<dd><code>serializable</code> - true</dd>
			
		
		</dl>

		<hr>
	









<!-- ============ METHOD DETAIL ========== -->

<a name="method_detail"><!-- --></a>
<table class="table table-bordered">
	<tr class="info">
		<th colspan="1" align="left">
			<strong>Method Detail</strong>
		</th>
	</tr>
</table>


	
	<a name="$abort()"><!-- --></a>
	<h3>$abort</h3>
	
	<kbd>public void <strong>$abort</strong>()</kbd>
	
	<br><br>

	
		<p>Facade for cfabort</p>
	

	
		
		
	

	
	

	

	

	</dl>
	<hr>

	
	<a name="$dump()"><!-- --></a>
	<h3>$dump</h3>
	
	<kbd>public void <strong>$dump</strong>(any var, [boolean isAbort='false'])</kbd>
	
	<br><br>

	
		<p>Facade for cfmx dump</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>var</code></dd>
		
		<dd><code>isAbort</code> - Abort also</dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="$throw()"><!-- --></a>
	<h3>$throw</h3>
	
	<kbd>public any <strong>$throw</strong>(string message, [string detail=''], [string type='Framework'])</kbd>
	
	<br><br>

	
		<p>Facade for cfthrow</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>message</code></dd>
		
		<dd><code>detail</code></dd>
		
		<dd><code>type</code></dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="getAPIURL()"><!-- --></a>
	<h3>getAPIURL</h3>
	
	<kbd>public string <strong>getAPIURL</strong>()</kbd>
	
	<br><br>

	

	
		
		
	

	
	

	

	

	</dl>
	<hr>

	
	<a name="getEntries()"><!-- --></a>
	<h3>getEntries</h3>
	
	<kbd>public query <strong>getEntries</strong>([string orderBy='[runtime expression]'], [numeric maxrows='0'], [numeric startRow='1'], [string typeSlug=''])</kbd>
	
	<br><br>

	
		<p>Get entries</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>orderBy</code> - The type to order by, look at this.ORDERBY</dd>
		
		<dd><code>maxrows</code> - Max rows to return</dd>
		
		<dd><code>startRow</code> - StartRow</dd>
		
		<dd><code>typeSlug</code> - The tye slug to filter on</dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="getEntry()"><!-- --></a>
	<h3>getEntry</h3>
	
	<kbd>public struct <strong>getEntry</strong>(string slug='')</kbd>
	
	<br><br>

	
		<p>Get an entry from forgebox by slug</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>slug</code> - The entry slug to retreive</dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="getLogger()"><!-- --></a>
	<h3>getLogger</h3>
	
	<kbd>public string <strong>getLogger</strong>()</kbd>
	
	<br><br>

	

	
		
		
	

	
	

	

	

	</dl>
	<hr>

	
	<a name="getTypes()"><!-- --></a>
	<h3>getTypes</h3>
	
	<kbd>public query <strong>getTypes</strong>()</kbd>
	
	<br><br>

	
		<p>Get an array of entry types</p>
	

	
		
		
	

	
	

	

	

	</dl>
	<hr>

	
	<a name="install()"><!-- --></a>
	<h3>install</h3>
	
	<kbd>public struct <strong>install</strong>(string downloadURL, string destinationDir)</kbd>
	
	<br><br>

	
		<p>Install Code Entry</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>downloadURL</code></dd>
		
		<dd><code>destinationDir</code></dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="makeRequest()"><!-- --></a>
	<h3>makeRequest</h3>
	
	<kbd>private struct <strong>makeRequest</strong>([string method='GET'], [string resource=''], [any body=''], [struct headers='[runtime expression]'], [struct parameters='[runtime expression]'], [numeric timeout='30'])</kbd>
	
	<br><br>

	
		<p>Invoke a ForgeBox REST Call</p>
	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>method</code> - The HTTP method to invoke</dd>
		
		<dd><code>resource</code> - The resource to hit in the forgebox service.</dd>
		
		<dd><code>body</code> - The body content of the request if passed.</dd>
		
		<dd><code>headers</code> - An struct of HTTP headers to send</dd>
		
		<dd><code>parameters</code> - An struct of HTTP URL parameters to send in the request</dd>
		
		<dd><code>timeout</code> - The default call timeout</dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="setAPIURL()"><!-- --></a>
	<h3>setAPIURL</h3>
	
	<kbd>public any <strong>setAPIURL</strong>(any APIURL)</kbd>
	
	<br><br>

	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>APIURL</code></dd>
		
		</dl>
	

	

	</dl>
	<hr>

	
	<a name="setLogger()"><!-- --></a>
	<h3>setLogger</h3>
	
	<kbd>public any <strong>setLogger</strong>(any logger)</kbd>
	
	<br><br>

	

	
		
		
	

	
	

	
		<dl>
		<dt><strong>Parameters:</strong></dt>
		
		<dd><code>logger</code></dd>
		
		</dl>
	

	

	</dl>
	<hr>




</body>
</html>

