component output="false" singleton{	property name="userBewirtungService"   inject="id:userBewirtungService";	property name="bildBewirtungService"   inject="id:bildBewirtungService";	property name="belegBewirtungService"  inject="id:belegBewirtungService";	property name="GmWrapperService" 	   inject="id:GmWrapperService";	property name="sessionStorage"    	   inject="coldbox:plugin:SessionStorage";	property name="fullImgPath"            inject="coldbox:setting:fullImgPath";	property name="partialImgPath"         inject="coldbox:setting:partialImgPath";	function preHandler(event,rc,prc){		prc.validationErrors = [];	}		// Default Action	function index(event,rc,prc){		setNextEvent('bewirtung.form');		}			function form(event,rc,prc){		prc.beleg = belegBewirtungService.new();				event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );			}		function myprofile(event,rc,prc){			if(prc.user.isLoaded()){			event.setView( view="bewirtungsbeleg/myprofile", layout="layouts/bewirtungLayout" );
		}		else{			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );
		}		}			function logout(event,rc,prc){		prc.beleg = belegBewirtungService.new();		prc.user = userBewirtungService.new();		prc.isLoggedIn = false;		sessionStorage.clearAll();		event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );	}			function mydocuments(event,rc,prc){				//prc.beleg = belegBewirtungService.new();		prc.belege = belegBewirtungService.getAllDocumentations( prc.user.getReferenceID() );			event.setView( view="bewirtungsbeleg/mydocuments", layout="layouts/bewirtungLayout" );
	}		function edit(event,rc,prc){		var belegID = rc.belegID; //coming from ajax: function loadEditView		prc.beleg = belegBewirtungService.findAllWhere( criteria = { id = belegID } )[1];		/*prc.mealDate         = dateTimeFormat( tempBeleg[1].getMealDate() , "dd/MM/yyyy" );		prc.location         = tempBeleg[1].getLocation();		prc.participants     = tempBeleg[1].getParticipants();		prc.occasion         = tempBeleg[1].getOccasion();		prc.price            = tempBeleg[1].getPrice();		prc.currentLocation  = tempBeleg[1].getCurrentLocation();		prc.currentDate      = dateTimeFormat( tempBeleg[1].getCurrentDate() , "dd/MM/yyyy" );		prc.pictures         = tempbeleg[1].getBilder();*/					/*for (i=1; i LE ArrayLen( prc.beleg.getPictures() ); i=i+1){			prc.pictures[i].picLarge   = "includes/img/" & prc.pictures[i].getUUID() & ".jpg";			prc.pictures[i].picPreview = "includes/img/" & prc.pictures[i].getUUIDpreview() & ".jpg";			prc.pictures[i].ID         = prc.pictures[i].getID();		}*/		if(sessionStorage.exists("currentUserName")){			prc.currentUser = sessionStorage.getVar( "currentUserName" );			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/ajax" );		}else{			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );		}	}		function saveDocumentation(event,rc,prc){		writeDump(rc);		var belegID = event.getValue('belegID','0');		if(belegID eq 0)			prc.beleg = belegBewirtungService.new(); // save a new 		else			prc.beleg = belegBewirtungService.get(belegID); // edit existing beleg!				if(sessionStorage.exists("currentUserReferenceID")){			
			prc.belegBewirtung = belegBewirtungService.populate( target = prc.belegBewirtung, memento = rc ,include= "mealDate,location,participants,occasion,price,currency,restaurant,currentDate,currentLocation");						prc.belegBewirtung.setReferenceID(sessionStorage.getVar( "currentUserReferenceID" ));			var temp = userBewirtungService.findAllWhere( criteria = { referenceID = sessionStorage.getVar( "currentUserReferenceID" ) } );						prc.beleg.setUser(prc.user);			var result = validateModel(prc.belegBewirtung);						prc.validationErrors = result.getErrors();									if(result.GETERRORCOUNT() eq 0){								belegBewirtungService.saveDocumentation(prc.belegBewirtung);				var belegID = prc.belegBewirtung.getId(); // use this later as FK in bild table				var tempBeleg = belegBewirtungService.findAllWhere( criteria = { id = belegID } );								for (i=1; i LE 5; i=i+1) {  // 5 is max file count documentScan_"&i: documentScan_1//documentScan_2//documentScan_3							if(event.getValue( "documentScan_"&i, "" ) neq "" ){										ui = createUUID();					ui_preview = createUUID();								var tempFile = getPlugin("FileUtils").uploadFile(fileField="documentScan_" & i ,destination="C:/inetpub/www_akibase/test1/includes/img",accept="image/jpeg,image/jpg,image/png,image/tiff,image/gif",nameConflict="makeunique");					var picturename = tempFile.CLIENTFILE; // for saving in db									    GmWrapperService.makeJPG(fullImgPath & tempFile.SERVERFILE ); //making jpg from every file, need to change this later only for not jpg files					FileCopy( fullImgPath & tempFile.SERVERFILENAME & ".jpg", fullImgPath & ui & ".jpg"); //changing name to uuid								GmWrapperService.scale( fullImgPath & ui & ".jpg", 200, fullImgPath & ui_preview & ".jpg"); // creating preview image with name ui_preview								/*GmWrapperService.sharpen(fullImgPath & ui_preview & ".jpg" , "0.5" , "90");*/					getPlugin("FileUtils").removeFile( fullImgPath & tempFile.SERVERFILE); // remove original file					getPlugin("FileUtils").removeFile( fullImgPath & tempFile.SERVERFILENAME & ".jpg" ); // remove converted jpg file with original name						prc.bildBewirtung = bildBewirtungService.new();					prc.bildBewirtung.setBildName(picturename);					prc.bildBewirtung.setUUID(ui);					prc.bildBewirtung.setUUIDpreview(ui_preview);					prc.bildBewirtung.setBelegBewirtung(EntityLoadByPK ("belegBewirtung", tempBeleg[1].getID()));					bildBewirtungService.savePictures(prc.bildBewirtung);							}//end if event.getValue				}//end for
			} //end if geterrorcount						prc.currentUser = sessionStorage.getVar( "currentUserName" );			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );			
		} // end if sessionStorage.exists		else{			setNextEvent('bewirtung.form');		}	}		function _overrideDocumentation_(event,rc,prc){ 		prc.currentUser = sessionStorage.getVar( "currentUserName" );				if(sessionStorage.exists("currentUserReferenceID")){			prc.belege = belegBewirtungService.getAllDocumentations( sessionStorage.getVar( "currentUserReferenceID" ) );			var temp = EntityLoad ("belegBewirtung", rc.belegID, true);	//TODO check if the documentation belongs to the logged user					belegBewirtungService.populate( target = temp, memento = rc ,include= "mealDate,location,participants,occasion,price,currency,restaurant,currentDate,currentLocation");						var result = validateModel(temp);						prc.validationErrors = result.getErrors();						if(result.GETERRORCOUNT() eq 0){				belegBewirtungService.saveDocumentation(temp);				var belegID = rc.belegID; // use this later as FK in bild table				var tempBeleg = belegBewirtungService.findAllWhere( criteria = { id = belegID } );								for (i=1; i LE 5; i=i+1) {  // 5 is max file count documentScan_"&i: documentScan_1//documentScan_2//documentScan_3							if(event.getValue( "documentScan_"&i, "" ) neq "" ){							ui = createUUID();						ui_preview = createUUID();									var tempFile = getPlugin("FileUtils").uploadFile(fileField="documentScan_" & i ,destination="C:/inetpub/www_akibase/test1/includes/img",accept="image/jpeg,image/jpg,image/png,image/tiff,image/gif",nameConflict="makeunique");						var picturename = tempFile.CLIENTFILE; // for saving in db										    GmWrapperService.makeJPG(fullImgPath & tempFile.SERVERFILE ); //making jpg from every file, need to change this later only for not jpg files						FileCopy(fullImgPath & tempFile.SERVERFILENAME & ".jpg", fullImgPath & ui & ".jpg"); //changing name to uuid									GmWrapperService.scale(fullImgPath & ui & ".jpg", 200, fullImgPath & ui_preview & ".jpg"); // creating preview image with name ui_preview									/*GmWrapperService.sharpen(fullImgPath & ui_preview & ".jpg" , "0.5" , "90");*/						getPlugin("FileUtils").removeFile(fullImgPath & tempFile.SERVERFILE); // remove original file						getPlugin("FileUtils").removeFile(fullImgPath & tempFile.SERVERFILENAME & ".jpg" ); // remove converted jpg file with original name							prc.bildBewirtung = bildBewirtungService.new();						prc.bildBewirtung.setBildName(picturename);						prc.bildBewirtung.setUUID(ui);						prc.bildBewirtung.setUUIDpreview(ui_preview);						prc.bildBewirtung.setBelegBewirtung(EntityLoadByPK ("belegBewirtung", tempBeleg[1].getID()));						bildBewirtungService.savePictures(prc.bildBewirtung);							}//end if event.getValue				}//end for			} //end if geterrorcount			prc.currentUser=sessionStorage.getVar( "currentUserName" );			event.setView( view="bewirtungsbeleg/mydocuments", layout="layouts/bewirtungLayout" );		}		else{			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );
		}	
	}		function generatePDF(event,rc,prc){				//default values		prc.mealDate = event.getValue("mealDate", "");		prc.location = event.getValue("location", "");		prc.participants = event.getValue("participants", "");		prc.occasion = event.getValue("occasion", "");		prc.price = event.getValue("price", "100");				if( event.getValue("restaurant", "1") == 1 ){			prc.restaurant = "In Restaurationsbetrieben";
		}		else{			prc.restaurant = "Sonstige Bewirtung";
		}		prc.currentLocation = event.getValue("currentLocation", "");		prc.currentDate = event.getValue("currentDate", "");				prc.warning1 = flash.get("warning", 'Sie sind nicht angemeldet' );		event.renderData(data=renderView("bewirtungsbeleg/pdf"), type="PDF");		}			function removeDocumentation(event,rc,prc){			prc.currentUser = sessionStorage.getVar( "currentUserName" );				if(sessionStorage.exists("currentUserReferenceID")){			prc.belege = belegBewirtungService.getAllDocumentations( prc.currentUser );						var documentToDelete = EntityLoad ("belegBewirtung", rc.belegID, true);	//TODO check if the documentation belongs to the logged user						if( belegBewirtungService.belongs( documentToDelete, sessionStorage.getVar( "currentUserReferenceID" ) ) ){				/*writedump("here");abort;*/					for (i=1; i LE ArrayLen( documentToDelete.getbilder() ); i=i+1) { //remove from disk					getPlugin("FileUtils").removeFile(fullImgPath & documentToDelete.getbilder()[i].getUUID() & ".jpg" );					getPlugin("FileUtils").removeFile(fullImgPath & documentToDelete.getbilder()[i].getUUIDpreview() & ".jpg" );				
				}							belegBewirtungService.deleteDocumentation(documentToDelete); //remove from DB				setNextEvent('bewirtung.mydocuments');			}//end if belongs			}		else{			/*writedump("here2");abort;*/			event.setView( view="bewirtungsbeleg/form_edit", layout="layouts/bewirtungLayout" );		}	}			function removeImage(event,rc,prc){		var picID = rc.picID;		prc.currentUser = sessionStorage.getVar( "currentUserName" );						var imageToDelete = EntityLoad ("bildBewirtung", picID, true);	//TODO check if the picture belongs to the logged user							var UUID = imageToDelete.getUUID();		var UUIDpreview = imageToDelete.getUUIDpreview();								bildBewirtungService.deleteImage(imageToDelete);						var checkIfRemoved = bildBewirtungService.findAllWhere( criteria = { id = picID} );								if( ArrayLen(checkIfRemoved) == 0 ){ //if deleted from DB remove the pictures from the disk			getPlugin("FileUtils").removeFile(fullImgPath & UUID & ".jpg" );			getPlugin("FileUtils").removeFile(fullImgPath & UUIDpreview & ".jpg" );						event.renderData(data="true",type="json");		}		else{			event.renderData(data="false",type="json");
		}			
	}			/************************************** IMPLICIT ACTIONS *********************************************/	function onAppInit(event,rc,prc){	}	function onRequestStart(event,rc,prc){	}	function onRequestEnd(event,rc,prc){	}	function onSessionStart(event,rc,prc){	}	function onSessionEnd(event,rc,prc){		var sessionScope = event.getValue("sessionReference");		var applicationScope = event.getValue("applicationReference");	}	function onException(event,rc,prc){		//Grab Exception From request collection, placed C:/inetpub/www_akibase/test1/includes/img ColdBox		var exceptionBean = event.getValue("ExceptionBean");		//Place exception handler below:	}	function onMissingTemplate(event,rc,prc){		//Grab missingTemplate From request collection, placed by ColdBox		var missingTemplate = event.getValue("missingTemplate");	}}